###############################################################################
#                                                                             #
#                                                       04/Dec/2012  22:39:15 #
# IAR C/C++ Compiler V6.11.1.20453, Evaluation Version  for Atmel AVR         #
# Copyright 1996-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Users\admin\Documents\proj\main.c                     #
#    Command line =  C:\Users\admin\Documents\proj\main.c --cpu=m8 -mt -o     #
#                    C:\Users\admin\Documents\proj\Debug\Obj\ -lCN            #
#                    C:\Users\admin\Documents\proj\Debug\List\                #
#                    --initializers_in_flash --no_cse --no_inline             #
#                    --no_code_motion --no_cross_call --no_clustering         #
#                    --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e            #
#                    --eeprom_size 512 --clib -Ol                             #
#    List file    =  C:\Users\admin\Documents\proj\Debug\List\main.lst        #
#    Object file  =  C:\Users\admin\Documents\proj\Debug\Obj\main.r90         #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\admin\Documents\proj\main.c
      1          //***************************************************************************
      2          //
      3          //  Author(s)...: Pashgan    http://ChipEnable.Ru   
      4          //
      5          //  Target(s)...: ATMega8
      6          //
      7          //  Compiler....: IAR 5.11
      8          //
      9          //  Description.: Эксперименты с семисегментным индикатором
     10          //
     11          //  Data........: 15.04.10 
     12          //
     13          //***************************************************************************
     14          #include <ioavr.h>

   \                                 In  segment ABSOLUTE, at 0x52
   \   union <unnamed> volatile __io _A_TCNT0
   \                     _A_TCNT0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x53
   \   union <unnamed> volatile __io _A_TCCR0
   \                     _A_TCCR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x59
   \   union <unnamed> volatile __io _A_TIMSK
   \                     _A_TIMSK:
   \   00000000                      DS8 1
     15          #include <intrinsics.h>
     16          #include "indicator.h"
     17          
     18          #define TIMER_CONST 0xb2
     19          
     20          //программный счетчик секунд

   \                                 In  segment TINY_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: TINY_Z>`
     21          unsigned char counterProg = 0;
   \                     counterProg:
   \   00000000                      DS8 1
     22          

   \                                 In  segment CODE, align 2, keep-with-next
     23          int main( void )
   \                     main:
     24          {
     25            IND_Init();
   \   00000000   ....               RCALL   IND_Init
     26            
     27            //инициализация таймера Т0 
     28            TIMSK = (1<<TOIE0);
   \   00000002   E001               LDI     R16, 1
   \   00000004   BF09               OUT     0x39, R16
     29            TCCR0 = (1<<CS02)|(0<<CS01)|(1<<CS00);
   \   00000006   E005               LDI     R16, 5
   \   00000008   BF03               OUT     0x33, R16
     30            TCNT0 =  TIMER_CONST;
   \   0000000A   EB02               LDI     R16, 178
   \   0000000C   BF02               OUT     0x32, R16
     31              
     32            __enable_interrupt();
   \   0000000E   9478               SEI
     33            while(1){
     34              //программный счетчик секунд
     35              counterProg++;
   \                     ??main_0:
   \   00000010   9100....           LDS     R16, counterProg
   \   00000014   9503               INC     R16
   \   00000016   9300....           STS     counterProg, R16
     36              if (counterProg == 100) counterProg = 0;
   \   0000001A   9100....           LDS     R16, counterProg
   \   0000001E   3604               CPI     R16, 100
   \   00000020   F419               BRNE    ??main_1
   \   00000022   E000               LDI     R16, 0
   \   00000024   9300....           STS     counterProg, R16
     37              IND_Conv(counterProg);
   \                     ??main_1:
   \   00000028   9100....           LDS     R16, counterProg
   \   0000002C   ....               RCALL   IND_Conv
     38              __delay_cycles(8000000);    
   \   0000002E   EF0F               LDI     R16, 255
   \   00000030   E619               LDI     R17, 105
   \   00000032   E128               LDI     R18, 24
   \   00000034   5001               SUBI    R16, 1
   \   00000036   4010               SBCI    R17, 0
   \   00000038   4020               SBCI    R18, 0
   \   0000003A   F7E1               BRNE    $-6
   \   0000003C   C000               RJMP    $+2
   \   0000003E   0000               NOP
   \   00000040   CFE7               RJMP    ??main_0
   \   00000042                      REQUIRE _A_TIMSK
   \   00000042                      REQUIRE _A_TCCR0
   \   00000042                      REQUIRE _A_TCNT0
     39            }  
     40            return 0;
     41          }
     42          
     43          //прерывания таймера Т0 - вывод на индикатор
     44          #pragma vector = TIMER0_OVF_vect

   \                                 In  segment CODE, align 2, keep-with-next
     45          __interrupt void Timer0_Ovf(void)
   \                     Timer0_Ovf:
     46          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   93FA               ST      -Y, R31
   \   00000004   93EA               ST      -Y, R30
   \   00000006   923A               ST      -Y, R3
   \   00000008   922A               ST      -Y, R2
   \   0000000A   921A               ST      -Y, R1
   \   0000000C   920A               ST      -Y, R0
   \   0000000E   937A               ST      -Y, R23
   \   00000010   936A               ST      -Y, R22
   \   00000012   935A               ST      -Y, R21
   \   00000014   934A               ST      -Y, R20
   \   00000016   933A               ST      -Y, R19
   \   00000018   932A               ST      -Y, R18
   \   0000001A   931A               ST      -Y, R17
   \   0000001C   930A               ST      -Y, R16
   \   0000001E   B78F               IN      R24, 0x3F
     47            TCNT0 = TIMER_CONST;
   \   00000020   EB02               LDI     R16, 178
   \   00000022   BF02               OUT     0x32, R16
     48            IND_Update();
   \   00000024   ....               RCALL   IND_Update
     49          }
   \   00000026   BF8F               OUT     0x3F, R24
   \   00000028   9109               LD      R16, Y+
   \   0000002A   9119               LD      R17, Y+
   \   0000002C   9129               LD      R18, Y+
   \   0000002E   9139               LD      R19, Y+
   \   00000030   9149               LD      R20, Y+
   \   00000032   9159               LD      R21, Y+
   \   00000034   9169               LD      R22, Y+
   \   00000036   9179               LD      R23, Y+
   \   00000038   9009               LD      R0, Y+
   \   0000003A   9019               LD      R1, Y+
   \   0000003C   9029               LD      R2, Y+
   \   0000003E   9039               LD      R3, Y+
   \   00000040   91E9               LD      R30, Y+
   \   00000042   91F9               LD      R31, Y+
   \   00000044   9189               LD      R24, Y+
   \   00000046   9518               RETI
   \   00000048                      REQUIRE _A_TCNT0

   \                                 In  segment INTVEC, offset 0x12, root
   \                     `??Timer0_Ovf??INTVEC 18`:
   \   00000012   ....               RJMP    Timer0_Ovf

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      15      2  Timer0_Ovf
                   15 2 -> IND_Update
       0      2  main
                    0 2 -> IND_Conv
                    0 2 -> IND_Init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  ??Timer0_Ovf??INTVEC 18
      72  Timer0_Ovf
       1  _A_TCCR0
       1  _A_TCNT0
       1  _A_TIMSK
       1  counterProg
      66  main
       6  -- Other

 
   3 bytes in segment ABSOLUTE
 138 bytes in segment CODE
   6 bytes in segment INITTAB
   2 bytes in segment INTVEC
   1 byte  in segment TINY_Z
 
 138 bytes of CODE memory (+ 8 bytes shared)
   1 byte  of DATA memory (+ 3 bytes shared)

Errors: none
Warnings: 1
